{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nconst USERNAME = process.env.REACT_APP_USERNAME;\nconst PASSWORD = process.env.REACT_APP_PASSWORD;\nconst axiosInstance = axios.create({\n  baseURL: API_BASE_URL,\n  auth: {\n    username: USERNAME,\n    password: PASSWORD\n  },\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const login = async (username, password) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/login`, {}, {\n      auth: {\n        username,\n        password\n      }\n    });\n    return response.status === 200;\n  } catch (error) {\n    console.error('Login error', error);\n    return false;\n  }\n};\nexport const getProducts = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/products`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching products', error);\n    return [];\n  }\n};\nexport const createProduct = async product => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/products/`, product, {\n      auth: {\n        username: 'juggy',\n        // Replace with actual username\n        password: 'Idus1234@@' // Replace with actual password\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error creating product', error);\n    return null;\n  }\n};\nexport const deleteProduct = async productId => {\n  try {\n    await axios.delete(`${API_BASE_URL}/products/${productId}/delete`, {\n      auth: {\n        username: 'juggy',\n        // Replace with actual username\n        password: 'Idus1234@@' // Replace with actual password\n      }\n    });\n  } catch (error) {\n    console.error('Error deleting product', error);\n  }\n};\nexport const scrapeProducts = async () => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/products/scrape`, {}, {\n      auth: {\n        username: 'juggy',\n        // Replace with actual username\n        password: 'Idus1234@@' // Replace with actual password\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error starting scraper', error);\n    return null;\n  }\n};\nexport const scrapeProduct = async productId => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/products/scrape/${productId}`, {}, {\n      auth: {\n        username: 'juggy',\n        // Replace with actual username\n        password: 'Idus1234@@' // Replace with actual password\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error starting scraper for ' + productId, error);\n    return null;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","USERNAME","REACT_APP_USERNAME","PASSWORD","REACT_APP_PASSWORD","axiosInstance","create","baseURL","auth","username","password","headers","login","response","post","status","error","console","getProducts","get","data","createProduct","product","deleteProduct","productId","delete","scrapeProducts","scrapeProduct"],"sources":["C:/Users/andra/Desktop/code/Bumble/FlipVault0.1/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst USERNAME = process.env.REACT_APP_USERNAME;\r\nconst PASSWORD = process.env.REACT_APP_PASSWORD;\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  auth: {\r\n    username: USERNAME,\r\n    password: PASSWORD,\r\n  },\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\nexport const login = async (username, password) => {\r\n  try {\r\n    const response = await axios.post(`${API_BASE_URL}/login`, {}, {\r\n      auth: {\r\n        username,\r\n        password,\r\n      },\r\n    });\r\n    return response.status === 200;\r\n  } catch (error) {\r\n    console.error('Login error', error);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const getProducts = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_BASE_URL}/products`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching products', error);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const createProduct = async (product) => {\r\n  try {\r\n    const response = await axios.post(`${API_BASE_URL}/products/`, product, {\r\n      auth: {\r\n        username: 'juggy', // Replace with actual username\r\n        password: 'Idus1234@@', // Replace with actual password\r\n      },\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error creating product', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const deleteProduct = async (productId) => {\r\n  try {\r\n    await axios.delete(`${API_BASE_URL}/products/${productId}/delete`, {\r\n      auth: {\r\n        username: 'juggy', // Replace with actual username\r\n        password: 'Idus1234@@', // Replace with actual password\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.error('Error deleting product', error);\r\n  }\r\n};\r\n\r\nexport const scrapeProducts = async () => {\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/products/scrape`, {}, {\r\n        auth: {\r\n            username: 'juggy', // Replace with actual username\r\n            password: 'Idus1234@@', // Replace with actual password\r\n        },\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error starting scraper', error);\r\n      return null;\r\n    }\r\n};\r\n\r\nexport const scrapeProduct = async (productId) => {\r\n  try {\r\n    const response = await axios.post(`${API_BASE_URL}/products/scrape/${productId}`, {}, {\r\n      auth: {\r\n          username: 'juggy', // Replace with actual username\r\n          password: 'Idus1234@@', // Replace with actual password\r\n      },\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error starting scraper for ' + productId, error);\r\n    return null;\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}