{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nconst USERNAME = process.env.REACT_APP_USERNAME;\nconst PASSWORD = process.env.REACT_APP_PASSWORD;\nconst axiosInstance = axios.create({\n  baseURL: API_BASE_URL,\n  auth: {\n    username: USERNAME,\n    password: PASSWORD\n  },\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Function for handling errors\nconst handleError = (error, customMessage = 'Request failed') => {\n  var _error$response, _error$response2;\n  console.error(customMessage, ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  return {\n    success: false,\n    error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message\n  };\n};\n\n// Authenticated Login\nexport const login = async (username, password) => {\n  try {\n    const response = await axiosInstance.post('/login', {\n      username,\n      password\n    });\n    return {\n      success: response.data.success\n    };\n  } catch (error) {\n    return handleError(error, 'Login error');\n  }\n};\n\n// Fetch all products\nexport const getProducts = async () => {\n  try {\n    const response = await axiosInstance.get('/products');\n    return {\n      success: true,\n      data: response.data\n    };\n  } catch (error) {\n    return handleError(error, 'Error fetching products');\n  }\n};\n\n// Create a new product\nexport const createProduct = async product => {\n  try {\n    const response = await axiosInstance.post('/products/', product);\n    return {\n      success: true,\n      data: response.data\n    };\n  } catch (error) {\n    return handleError(error, 'Error creating product');\n  }\n};\n\n// Delete a product\nexport const deleteProduct = async productId => {\n  try {\n    await axiosInstance.delete(`/products/${productId}/delete`);\n    return {\n      success: true\n    };\n  } catch (error) {\n    return handleError(error, 'Error deleting product');\n  }\n};\n\n// Start scraping all products\nexport const scrapeProducts = async () => {\n  try {\n    const response = await axiosInstance.post('/products/scrape');\n    return {\n      success: true,\n      data: response.data\n    };\n  } catch (error) {\n    return handleError(error, 'Error starting scraper');\n  }\n};\n\n// Start scraping a single product\nexport const scrapeProduct = async productId => {\n  try {\n    const response = await axiosInstance.post(`/products/scrape/${productId}`);\n    return {\n      success: true,\n      data: response.data\n    };\n  } catch (error) {\n    return handleError(error, `Error scraping product ${productId}`);\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","USERNAME","REACT_APP_USERNAME","PASSWORD","REACT_APP_PASSWORD","axiosInstance","create","baseURL","auth","username","password","headers","handleError","error","customMessage","_error$response","_error$response2","console","response","data","message","success","login","post","getProducts","get","createProduct","product","deleteProduct","productId","delete","scrapeProducts","scrapeProduct"],"sources":["C:/Users/andra/Desktop/code/Bumble/FlipVault0.1/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst USERNAME = process.env.REACT_APP_USERNAME;\r\nconst PASSWORD = process.env.REACT_APP_PASSWORD;\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  auth: {\r\n    username: USERNAME,\r\n    password: PASSWORD,\r\n  },\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Function for handling errors\r\nconst handleError = (error, customMessage = 'Request failed') => {\r\n  console.error(customMessage, error.response?.data || error.message);\r\n  return { success: false, error: error.response?.data || error.message };\r\n};\r\n\r\n// Authenticated Login\r\nexport const login = async (username, password) => {\r\n  try {\r\n    const response = await axiosInstance.post('/login', { username, password });\r\n    return { success: response.data.success };\r\n  } catch (error) {\r\n    return handleError(error, 'Login error');\r\n  }\r\n};\r\n\r\n// Fetch all products\r\nexport const getProducts = async () => {\r\n  try {\r\n    const response = await axiosInstance.get('/products');\r\n    return { success: true, data: response.data };\r\n  } catch (error) {\r\n    return handleError(error, 'Error fetching products');\r\n  }\r\n};\r\n\r\n// Create a new product\r\nexport const createProduct = async (product) => {\r\n  try {\r\n    const response = await axiosInstance.post('/products/', product);\r\n    return { success: true, data: response.data };\r\n  } catch (error) {\r\n    return handleError(error, 'Error creating product');\r\n  }\r\n};\r\n\r\n// Delete a product\r\nexport const deleteProduct = async (productId) => {\r\n  try {\r\n    await axiosInstance.delete(`/products/${productId}/delete`);\r\n    return { success: true };\r\n  } catch (error) {\r\n    return handleError(error, 'Error deleting product');\r\n  }\r\n};\r\n\r\n// Start scraping all products\r\nexport const scrapeProducts = async () => {\r\n  try {\r\n    const response = await axiosInstance.post('/products/scrape');\r\n    return { success: true, data: response.data };\r\n  } catch (error) {\r\n    return handleError(error, 'Error starting scraper');\r\n  }\r\n};\r\n\r\n// Start scraping a single product\r\nexport const scrapeProduct = async (productId) => {\r\n  try {\r\n    const response = await axiosInstance.post(`/products/scrape/${productId}`);\r\n    return { success: true, data: response.data };\r\n  } catch (error) {\r\n    return handleError(error, `Error scraping product ${productId}`);\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AACvD,MAAMC,QAAQ,GAAGH,OAAO,CAACC,GAAG,CAACG,kBAAkB;AAC/C,MAAMC,QAAQ,GAAGL,OAAO,CAACC,GAAG,CAACK,kBAAkB;AAE/C,MAAMC,aAAa,GAAGT,KAAK,CAACU,MAAM,CAAC;EACjCC,OAAO,EAAEV,YAAY;EACrBW,IAAI,EAAE;IACJC,QAAQ,EAAER,QAAQ;IAClBS,QAAQ,EAAEP;EACZ,CAAC;EACDQ,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,aAAa,GAAG,gBAAgB,KAAK;EAAA,IAAAC,eAAA,EAAAC,gBAAA;EAC/DC,OAAO,CAACJ,KAAK,CAACC,aAAa,EAAE,EAAAC,eAAA,GAAAF,KAAK,CAACK,QAAQ,cAAAH,eAAA,uBAAdA,eAAA,CAAgBI,IAAI,KAAIN,KAAK,CAACO,OAAO,CAAC;EACnE,OAAO;IAAEC,OAAO,EAAE,KAAK;IAAER,KAAK,EAAE,EAAAG,gBAAA,GAAAH,KAAK,CAACK,QAAQ,cAAAF,gBAAA,uBAAdA,gBAAA,CAAgBG,IAAI,KAAIN,KAAK,CAACO;EAAQ,CAAC;AACzE,CAAC;;AAED;AACA,OAAO,MAAME,KAAK,GAAG,MAAAA,CAAOb,QAAQ,EAAEC,QAAQ,KAAK;EACjD,IAAI;IACF,MAAMQ,QAAQ,GAAG,MAAMb,aAAa,CAACkB,IAAI,CAAC,QAAQ,EAAE;MAAEd,QAAQ;MAAEC;IAAS,CAAC,CAAC;IAC3E,OAAO;MAAEW,OAAO,EAAEH,QAAQ,CAACC,IAAI,CAACE;IAAQ,CAAC;EAC3C,CAAC,CAAC,OAAOR,KAAK,EAAE;IACd,OAAOD,WAAW,CAACC,KAAK,EAAE,aAAa,CAAC;EAC1C;AACF,CAAC;;AAED;AACA,OAAO,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMb,aAAa,CAACoB,GAAG,CAAC,WAAW,CAAC;IACrD,OAAO;MAAEJ,OAAO,EAAE,IAAI;MAAEF,IAAI,EAAED,QAAQ,CAACC;IAAK,CAAC;EAC/C,CAAC,CAAC,OAAON,KAAK,EAAE;IACd,OAAOD,WAAW,CAACC,KAAK,EAAE,yBAAyB,CAAC;EACtD;AACF,CAAC;;AAED;AACA,OAAO,MAAMa,aAAa,GAAG,MAAOC,OAAO,IAAK;EAC9C,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMb,aAAa,CAACkB,IAAI,CAAC,YAAY,EAAEI,OAAO,CAAC;IAChE,OAAO;MAAEN,OAAO,EAAE,IAAI;MAAEF,IAAI,EAAED,QAAQ,CAACC;IAAK,CAAC;EAC/C,CAAC,CAAC,OAAON,KAAK,EAAE;IACd,OAAOD,WAAW,CAACC,KAAK,EAAE,wBAAwB,CAAC;EACrD;AACF,CAAC;;AAED;AACA,OAAO,MAAMe,aAAa,GAAG,MAAOC,SAAS,IAAK;EAChD,IAAI;IACF,MAAMxB,aAAa,CAACyB,MAAM,CAAC,aAAaD,SAAS,SAAS,CAAC;IAC3D,OAAO;MAAER,OAAO,EAAE;IAAK,CAAC;EAC1B,CAAC,CAAC,OAAOR,KAAK,EAAE;IACd,OAAOD,WAAW,CAACC,KAAK,EAAE,wBAAwB,CAAC;EACrD;AACF,CAAC;;AAED;AACA,OAAO,MAAMkB,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMb,QAAQ,GAAG,MAAMb,aAAa,CAACkB,IAAI,CAAC,kBAAkB,CAAC;IAC7D,OAAO;MAAEF,OAAO,EAAE,IAAI;MAAEF,IAAI,EAAED,QAAQ,CAACC;IAAK,CAAC;EAC/C,CAAC,CAAC,OAAON,KAAK,EAAE;IACd,OAAOD,WAAW,CAACC,KAAK,EAAE,wBAAwB,CAAC;EACrD;AACF,CAAC;;AAED;AACA,OAAO,MAAMmB,aAAa,GAAG,MAAOH,SAAS,IAAK;EAChD,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAMb,aAAa,CAACkB,IAAI,CAAC,oBAAoBM,SAAS,EAAE,CAAC;IAC1E,OAAO;MAAER,OAAO,EAAE,IAAI;MAAEF,IAAI,EAAED,QAAQ,CAACC;IAAK,CAAC;EAC/C,CAAC,CAAC,OAAON,KAAK,EAAE;IACd,OAAOD,WAAW,CAACC,KAAK,EAAE,0BAA0BgB,SAAS,EAAE,CAAC;EAClE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}